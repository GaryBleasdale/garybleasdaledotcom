---
import Section from "../Section.astro";
import { skills as skillsData } from "@cv";
import type { Skills } from "@/data/cv";
import { Icon } from "astro-icon/components";
import { getIconName } from "@/data/skill-icons";
const skills = skillsData as Skills[];
---

<Section title="Skills">
  <ul>
    <svg viewBox="0 0 128 128">
      <g fill="#E434AA"
        ><path d="M18.39 96.852l-4.6-2.657L65.04 5.434l4.597 2.656zm0 0"
        ></path><path d="M12.734 87.105H115.23v5.31H12.734zm0 0"></path><path
          d="M66.031 119.688L14.766 90.09l2.656-4.602 51.266 29.602zm0 0M110.566 42.543L59.301 12.941l2.656-4.597 51.266 29.597zm0 0"
        ></path><path
          d="M17.434 42.523l-2.657-4.601 51.27-29.598 2.656 4.598zm0 0"
        ></path><path
          d="M109.621 96.852L58.375 8.09l4.598-2.656 51.25 88.761zm0 0M16.8 34.398h5.313v59.204h-5.312zm0 0"
        ></path><path d="M105.887 34.398h5.312v59.204h-5.312zm0 0"></path><path
          d="M65.129 117.441l-2.32-4.02 44.586-25.745 2.32 4.02zm0 0"
        ></path><path
          d="M118.238 95.328c-3.07 5.344-9.918 7.168-15.261 4.098-5.344-3.074-7.168-9.922-4.098-15.266 3.074-5.344 9.922-7.168 15.266-4.097 5.375 3.105 7.199 9.921 4.093 15.265M29.09 43.84c-3.074 5.344-9.922 7.168-15.266 4.097-5.344-3.074-7.168-9.921-4.097-15.265 3.074-5.344 9.921-7.168 15.265-4.098 5.344 3.106 7.168 9.922 4.098 15.266M9.762 95.328c-3.075-5.344-1.25-12.16 4.093-15.266 5.344-3.07 12.16-1.246 15.266 4.098 3.07 5.344 1.246 12.16-4.098 15.266-5.375 3.07-12.191 1.246-15.261-4.098M98.91 43.84c-3.07-5.344-1.246-12.16 4.098-15.266 5.344-3.07 12.16-1.246 15.265 4.098 3.07 5.344 1.247 12.16-4.097 15.266-5.344 3.07-12.192 1.246-15.266-4.098M64 126.656a11.158 11.158 0 01-11.168-11.168A11.158 11.158 0 0164 104.32a11.158 11.158 0 0111.168 11.168c0 6.145-4.992 11.168-11.168 11.168M64 23.68a11.158 11.158 0 01-11.168-11.168A11.158 11.158 0 0164 1.344a11.158 11.158 0 0111.168 11.168A11.158 11.158 0 0164 23.68"
        ></path></g
      >
    </svg>
    {
      skills.map(({ name, level, keywords = [] }) => {
        const iconName = getIconName(name);
        const keywordIcons = !iconName
          ? keywords.map(getIconName).filter(Boolean)
          : [];

        return (
          <li
            class="skill-pill"
            tabindex="0"
            onclick="this.classList.add('active'); setTimeout(() => this.classList.remove('active'), 1500)"
          >
            {/* Primary icon */}
            {iconName && <Icon name={iconName} class="icon" />}

            {/* Fallback icons for keywords */}
            {!iconName &&
              keywordIcons.length > 0 &&
              keywordIcons.map((icon) => <Icon name={icon} class="icon" />)}

            {/* Tooltip with skill name and level */}
            <span>{name}</span>
            {level && <span class="tooltip">{level}</span>}
          </li>
        );
      })
    }
  </ul>
</Section>

<style>
  ul {
    display: inline-flex;
    gap: 8px;
    flex-wrap: wrap;
  }

  .skill-pill {
    display: inline-flex;
    position: relative;
    align-items: center;
    gap: 0.4rem;
    padding: 0.3rem 0.75rem;
    background: #f4f4f5;
    border-radius: 1rem;
    font-size: 0.85rem;
    font-weight: 500;
    color: inherit;
    text-decoration: none;
    transition:
      background-color 0.25s ease,
      box-shadow 0.25s ease;
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
    cursor: default;
  }

  .skill-pill:hover {
    background-color: #e0e0e0;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  }

  .icon {
    height: 1rem;
    width: 1rem;
    opacity: 0.8;
  }

  .tooltip {
    background: #222;
    border-radius: 4px;
    color: white;
    font-size: 0.8rem;
    left: 50%;
    bottom: 110%;
    opacity: 0;
    padding: 0.2rem 0.4rem;
    position: absolute;
    transform: translateX(-50%);
    transition: opacity 0.2s ease-in-out;
    white-space: nowrap;
    pointer-events: none;
    z-index: 10;
  }

  .skill-pill.active .tooltip {
    opacity: 1;
  }
</style>
